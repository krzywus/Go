<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2.0">
  <help_text>// Uncomment the following line to change the fontsize and font:
/// fontsize=19
// fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>2</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>748</x>
      <y>144</y>
      <w>112</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>GoClient::BoardFrame
--
#boardSize: int
#board: GameBoard
#boardBuilder: BoardFrameBuilder
#windowLength, windowHeight: int
#inGameInfo: JLabel
#client: GoClient
#playerColor: char
-mouseAdapter = new BoardMouseAdapter(): BoardMouseAdapter
-bargainMouseAdapter = new BargainMouseAdapter(): BargainMouseAdapter
#territoryBargain = false: boolean
#bargainHandler: BargainHandler
--
~BoardFrame(GoClient client, int size, char color): ctor
-init(): void
#addMouseListener(): void
#removeMouseListener(): void
#addBargainMouseListener(): void
#removeBargainMouseListener(): void
#putOpponentStone(String posX, String posY): void
#deleteDeadStones(String posX, String posY): void
#disableButtons(): void
#enableButtons(): void
#startBargain(): void
#resetAlphaBoard(): void
#markOpponentProposition(int positionX, int positionY): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>718</x>
      <y>248</y>
      <w>114</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>GoClient::GameBoard
--
#g2d: Graphics2D
#boardBI, BStoneBI, alphaBStoneBI, WStoneBI, alphaWStoneBI: BufferedImage
-gameBuilder: GameBoardBuilder
#gameSize: int
#stoneSize: int
-BOARD[][]: Stone
-koStone[]: int
-koMark: boolean
#newStone[]: int
-alphaBoard[][]: boolean
-frame: BoardFrame
--
~GameBoard(BoardFrame frame, int gameSize): ctor
-init(): void
#paintComponent(Graphics g): void
-drawStonesToBoard(Graphics g): void
#checkMoveValidity(int x, int y): boolean
#deleteDeadStones(int stonePositionX, int stonePositionY): void
#getBoardChange(): int[]
#putOpponentStone(int x, int y): void
#getBoard(): Stone[][]
#getStone(int x, int y): Stone
#getStoneFromBoard(int x, int y): Stone
#resetAlphaBoard(): void
#setAlphaBoard(boolean[][] alphaBoard): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>196</x>
      <y>266</y>
      <w>62</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>GoServer.Bot::GoBot
--
-board: Stone[][]
-libertyBoard: int[][]
#botColor: char
#gameSize: int
#StarPointValue: int
#StickingStoneValue: int
#AttackValue: int
#DefenceValue: int
#KillingStoneValue: int
#DiagonalMoveValue: int
#LongMoveValue: int
-valuesBoard: int[][]
#currentStrategy: Strategy
--
~GoBot(int gameSize, char botColor): ctor
-init(): void
-chooseStrategy(): void
#simulation(): void
+main(String[] args): void
+getBoard(): Stone[][]
+getLibertyBoard(): int[][]
+setBoard(Stone[][] board): void
+setLibertyBoard(int[][] libertyBoard): void
+setValuesBoard(int[][] valuesBoard): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>776</x>
      <y>46</y>
      <w>64</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>GoClient::GoClient
--
-PORT = 8000: int
-socket: Socket
+out: PrintWriter
+in: BufferedReader
-mainMenu: MainMenu
#boardFrame: BoardFrame
-settings: SettingsFrame
-waitingFrame: WaitingFrame
#listener: ActionListener
-gameCommander: GameCommander
--
+GoClient(): ctor
+main(String[] args): void
+listenSocket(): void
+actionPerformed(ActionEvent e): void
-executeCommand(String command): void
-waitOpponent(): void
-openBoard(String command): void
-createSettingsString(): String
-startGame(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>204</x>
      <y>386</y>
      <w>80</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>GoServer.Bot::Evaluator
--
-strategy: Strategy
-bot: GoBot
-botColor: char
-gameSize: int
-board: Stone[][]
-libertyBoard: int[][]
--
~Evaluator(GoBot bot): ctor
+setDiagonalMovesValue(int x, int y): void
+setDefenceStonesValue(int x, int y): void
+setKillingStonesValue(int x, int y): void
+setAttackStonesValue(int x, int y): void
+setStickingStonesValue(int x, int y): void
+setStarPointsValue(): void
+setLongMoveValue(int x, int y): void
+getStickingNeighbours(int x, int y, char color): int
+getDiagonalNeighbours(int x, int y, char color): int
+getSecondTierNeighbours(int x, int y, char color): int
-setLibertyBoard(): void
-getKillingPosition(int x, int y): int[]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>48</x>
      <y>262</y>
      <w>106</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>GoServer.GameSession::GameSession
--
-RAND = new Random(): Random
-state: GameSessionStateBehavior
#black: ClientHandler
#white: ClientHandler
-whitePass, blackPass: boolean
--
+GameSession(ClientHandler player_one, ClientHandler player_two): ctor
-startGame(): void
-decideSides(ClientHandler player_one, ClientHandler player_two): void
+setState(GameSessionState newState): void
+getState(): GameSessionState
+getStateBehavior(): GameSessionStateBehavior
+doAction(String command): void
-blackMoved(String command): void
-whiteMoved(String command): void
+abortGame(ClientHandler abortingPlayer): void
-gameFinished(): void
-startBargain(): void
-territoryBargain(String command): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>904</x>
      <y>160</y>
      <w>80</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>GoClient::BoardFrameBuilder
--
+smallBoardWindowLength = 730: int
+smallBoardWindowHeight = 530: int
+mediumBoardWindowLength = 780: int
+mediumBoardWindowHeight = 580: int
+bigBoardWindowLength = 880: int
+bigBoardWindowHeight = 680: int
#windowLength, windowHeight: int
#resign, pass, info: JButton
#player1, player2: JLabel
#bargainAccept, bargainDecline, bargainSend: JButton
-frame: BoardFrame
--
~BoardFrameBuilder(BoardFrame frame): ctor
-init(): void
-chooseWindowSize(): void
#setSizes(): void
#addToFrame(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>612</x>
      <y>150</y>
      <w>96</w>
      <h>62</h>
    </coordinates>
    <panel_attributes>GoClient::SettingsFrame
--
+windowLength = 400: int
+windowHeight = 400: int
-mainTitle: JLabel
-sizeLabel, smallSizeLabel, mediumSizeLabel, bigSizeLabel: JLabel
-opponentLabel, OtherOpponentLabel, AIOpponentLabel: JLabel
+smallSizeBox, mediumSizeBox, bigSizeBox: JCheckBox
+AIBox, otherClientBox: JCheckBox
-save, exit: JButton
-client: GoClient
--
~SettingsFrame(GoClient client): ctor
-init(): void
-addListeners(): void
-setSizes(): void
-addElements(): void
+actionPerformed(ActionEvent e): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>270</y>
      <w>78</w>
      <h>62</h>
    </coordinates>
    <panel_attributes>GoServer::ClientHandler
--
-server: GoServer
-socket: Socket
#in: BufferedReader
+out: PrintWriter
-command: String
-skipExecution = false: boolean
-settings: Settings
-session: GameSession
--
~ClientHandler(Socket socket, GoServer server): ctor
+run(): void
-executeCommand(String command): void
-changeSettings(String command): void
+startGame(ClientHandler opponent, char color): void
+enemyLeftMatchmaking(): void
+setGameSession(GameSession session): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>730</x>
      <y>370</y>
      <w>88</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>GoClient::BargainHandler
--
-board[][]: Stone
-visitBoard[][]: boolean
-gameSize: int
-alphaBoard[][]: boolean
#selectedStones: ArrayList&lt;int[]&gt;
--
~BargainHandler(Stone[][] board, int gameSize): ctor
#resetSelectedStones(): void
#resetAlphaBoard(): void
-resetVisitBoard(): void
#getChain(Stone stone, ArrayList&lt;Stone&gt; neighbours): void
#markStones(Stone stone): boolean[][]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>870</x>
      <y>292</y>
      <w>90</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>GoClient::GameBoardBuilder
--
-boardImgPath = "src/graphics/Board": String
-BstoneImgPath = "src/graphics/BlackStone.png": String
-WstoneImgPath = "src/graphics/WhiteStone.png": String
-boardTexture, WStoneTexture, BStoneTexture: TexturePaint
-rect: Rectangle2D.Float
-board: GameBoard
--
~GameBoardBuilder(GameBoard board): ctor
-setStoneSize(): void
-loadImage(String imageURL): BufferedImage
-drawBoard(): void
-drawStones(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>604</x>
      <y>322</y>
      <w>104</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>GoClient::LibertyVisitor
--
-board[][]: Stone
-visitBoard[][]: boolean
-gameSize: int
--
+LibertyVisitor(Stone board[][], int gameSize): ctor
-resetVisitBoard(): void
+visit(Stone stone): void
-getNeighbours(Stone stone, ArrayList&lt;Stone&gt; neighbours): void
-getLiberty(ArrayList&lt;Stone&gt; stoneChain): int
+isSuicidal(Stone stone): boolean
+deleteDeadStones(int newStonePositionX, int newStonePositionY): int
-getTempBoard(): Stone[][]
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>296</x>
      <y>192</y>
      <w>100</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>GoServer::GoServer
--
-PORT = 8000: int
-server = null: ServerSocket
#clients = new HashSet&lt;ClientHandler&gt;(): HashSet&lt;ClientHandler&gt;
#matchmaker: Matchmaker
--
+GoServer(): ctor
+main(String[] args): void
#startListening(): void
-listenSocket(): void
#finalize(): void
+startListeningInTestEnvironment(int clientsToEnter): void
+serverShutdown(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>888</x>
      <y>78</y>
      <w>98</w>
      <h>46</h>
    </coordinates>
    <panel_attributes>GoClient::GameCommander
--
-client: GoClient
-boardFrame: BoardFrame
--
~GameCommander(GoClient client, BoardFrame boardFrame): ctor
#executeGameCommand(String command): void
-executeEnabledCommand(String command): void
-executeAbortCommand(String command): void
-executeBargainCommand(String command): void
-executePassCommand(String command): void
-executeFinishCommand(String command): void
-getAlphaBoard(String command): ArrayList&lt;int[]&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>122</x>
      <y>352</y>
      <w>42</w>
      <h>46</h>
    </coordinates>
    <panel_attributes>/GoServer.Bot::Strategy/
--
#bot: GoBot
#board: Stone[][]
#libertyBoard: int[][]
#gameSize: int
#botColor: char
#valuesBoard = null: int[][]
--
~Strategy(GoBot bot): ctor
~setValues(): void
+evaluateFields(): void
+resetValuesBoard(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>656</x>
      <y>46</y>
      <w>50</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>GoClient::MainMenu
--
-windowLength = 450: int
-windowHeight = 450: int
-client: GoClient
-startGame, options, exit: JButton
--
~MainMenu(GoClient client): ctor
-setSizes(): void
-addElements(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>632</x>
      <y>88</y>
      <w>40</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>GoClient::WaitingFrame
--
-windowLength = 400: int
-windowHeight = 200: int
-infoLabel: JLabel
--
~WaitingFrame(): ctor
-init(): void
-setSizes(): void
#setLabelInfo(): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>144</x>
      <y>192</y>
      <w>110</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>GoServer::Matchmaker
--
-instance: Matchmaker
-smallBoardPlayer[]: ClientHandler
-mediumBoardPlayer[]: ClientHandler
-bigBoardPlayer[]: ClientHandler
--
-Matchmaker(): ctor
+getInstance(): Matchmaker
+addPlayer(ClientHandler player, int boardSize, int opponentType): boolean
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>28</x>
      <y>180</y>
      <w>78</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
GoServer.GameSession::GameSessionStateBehavior
--
--
~getState(): GameSessionState
~blackMoved(): GameSessionStateBehavior
~whiteMoved(): GameSessionStateBehavior
~territoryBargain(): GameSessionStateBehavior
~gameFinished(): GameSessionStateBehavior
~gameAborted(): GameSessionStateBehavior
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>848</x>
      <y>368</y>
      <w>54</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>GoClient::Stone
--
+color: char
#positionX, positionY: int
+liberty: int
--
+Stone(char color, int x, int y): ctor
+accept(LibertyVisitor visitor): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>252</x>
      <y>206</y>
      <w>48</w>
      <h>10</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>220.0;30.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>256</x>
      <y>236</y>
      <w>46</w>
      <h>34</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>100</x>
      <y>226</y>
      <w>92</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>440.0;10.0;10.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>238</y>
      <w>30</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>74</x>
      <y>214</y>
      <w>20</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;use&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>10.0;10.0;20.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>162</x>
      <y>318</y>
      <w>38</w>
      <h>38</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>170.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>162</x>
      <y>376</y>
      <w>80</w>
      <h>14</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>10.0;20.0;380.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>148</y>
      <w>420</w>
      <h>342</h>
    </coordinates>
    <panel_attributes>GoServer
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>704</x>
      <y>58</y>
      <w>76</w>
      <h>22</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>360.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>668</x>
      <y>94</y>
      <w>110</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>530.0;30.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>110</y>
      <w>150</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>730.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>810</x>
      <y>120</y>
      <w>28</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>838</x>
      <y>74</y>
      <w>54</w>
      <h>26</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>10.0;10.0;250.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>856</x>
      <y>188</y>
      <w>52</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>10.0;40.0;240.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>778</x>
      <y>232</y>
      <w>28</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>278</y>
      <w>72</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>340.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>830</x>
      <y>288</y>
      <w>44</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>10.0;10.0;200.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>778</x>
      <y>336</y>
      <w>30</w>
      <h>38</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>40.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>830</x>
      <y>336</y>
      <w>38</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=.&gt;
&lt;&lt;create&gt;&gt;
m1=
m2=
fontsize=25</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>566</x>
      <y>0</y>
      <w>438</w>
      <h>460</h>
    </coordinates>
    <panel_attributes>GoClient
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
